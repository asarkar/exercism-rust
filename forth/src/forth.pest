Int = @{ ASCII_DIGIT+ }
Add = { "+" }
Sub = { "-" }
Mul = { "*" }
Div = { "/" }
BinOp = { Add | Sub | Mul | Div }
Dup = { ^"DUP" }
Drop = { ^"DROP" }
Swap = { ^"SWAP" }
Over = { ^"OVER" }
StackOp = { Dup | Drop | Swap | Over }
Rhs = _{ Int ~ BinOp }
BinExpr = _{ Int ~ Rhs }
CompoundExpr = _{ BinExpr ~ Rhs }
BuiltInCmd = { Int | BinOp | StackOp | CompoundExpr }
COLON = _{ ":" }
SEMICOLON = _{ ";" }
WHITESPACE = _{ " " }
HyphenatedWord = _{ ASCII_ALPHA+ ~ Sub ~ ASCII_ALPHA+ }
Word = @{ HyphenatedWord | BinOp | ASCII_ALPHA+ }
Cmd = { Word | BuiltInCmd }
Defn = { Cmd+ }
WordDefn = { COLON ~ Word ~ Defn ~ SEMICOLON }
InvalidWord = { COLON ~ ANY* }
LineItem = { WordDefn | Cmd | InvalidWord }
Line = _{ SOI ~ LineItem+ ~ EOI }